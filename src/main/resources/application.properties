server.servlet.context-path=/bishe
server.port=80



spring.http.encoding.charset=UTF-8


## datasource
spring.datasource.url=jdbc:mysql://localhost:3306/bishe?useUnicode=true&characterEncoding=utf-8&useSSL=true
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.initialization-mode=always
#spring.datasource.schema=classpath:sql/bishe.sql



# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true



spring.thymeleaf.cache=false
spring.thymeleaf.encoding=UTF-8





#mybatis

mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.type-aliases-package=com.liuchen.bishe.bishe.entry,com.liuchen.bishe.bishe.vo
logging.level.com.liuchen.bishe.bishe.dao=debug








#springMvc
spring.servlet.multipart.max-file-size=10240000000





#quartz
spring.quartz.job-store-type=jdbc
#调度标识名 集群中每一个实例都必须使用相同的名称
spring.quartz.properties.org.quartz.scheduler.instanceName=DefaultQuartzScheduler
#ID设置为自动获取 每一个必须不同
spring.quartz.properties.org.quartz.scheduler.instanceid=AUTO
#============================================================================
# Configure ThreadPool
#============================================================================
#线程池的实现类（一般使用SimpleThreadPool即可满足几乎所有用户的需求）
spring.quartz.properties.org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool
#指定线程数，至少为1（无默认值）(一般设置为1-100直接的整数合适)
spring.quartz.properties.org.quartz.threadPool.threadCount=25
#设置线程的优先级（最大为java.lang.Thread.MAX_PRIORITY 10，最小为Thread.MIN_PRIORITY 1，默认为5）
spring.quartz.properties.org.quartz.threadPool.threadPriority=5
#============================================================================
# Configure JobStore
#============================================================================
# 信息保存时间 默认值60秒
spring.quartz.properties.org.quartz.jobStore.misfireThreshold=60000
#数据保存方式为数据库持久化
spring.quartz.properties.org.quartz.jobStore.class=org.quartz.impl.jdbcjobstore.JobStoreTX
#数据库代理类，一般org.quartz.impl.jdbcjobstore.StdJDBCDelegate可以满足大部分数据库
spring.quartz.properties.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate
#JobDataMaps是否都为String类型
spring.quartz.properties.org.quartz.jobStore.useProperties=false
#数据库别名 随便取
spring.quartz.properties.org.quartz.jobStore.dataSource=myDS
#表的前缀，默认QRTZ_
spring.quartz.properties.org.quartz.jobStore.tablePrefix=qrtz_
#是否加入集群
spring.quartz.properties.org.quartz.jobStore.isClustered=false
#调度实例失效的检查时间间隔
spring.quartz.properties.org.quartz.jobStore.clusterCheckinInterval=20000






# email配置
spring.mail.host=smtp.163.com
spring.mail.username=liuxiaocheng386@163.com
spring.mail.password=QYJFGSJUEXPEKSHE
spring.mail.default-encoding=UTF-8







