"use strict";

/*
    引用common.js 须依赖jQuery.js
*/

var server_url = location.host; //服务器地址
var from_url = location.href; //浏览器链接
var html_url = "page-dev";

var basePath = 'http://' + server_url
/** 
 * 接口地址
 * 
 * 
 */
// var APIUrlOld = "http://test.juhuizhitou.com/" //旧-目前链接测试服务器
// var APIUrl = "http://testapi.juhuizhitou.com/"; //新工程-目前链接测试服务器
// var APIUrl = "http://172.16.205.20:8081"  //继辰
var APIUrl = getServerApi()

// 跳转网页路径
// var webUrl = "http://test.juhuizhitou.com/page-dev/"
var webUrl = basePath + '/page/'


//微信二次分享 接口域名 当前网页域名
var getIP = basePath

//动态获取服务器接口
function getServerApi() {
    // alert(basePath)
    var APIUrl;
    $.ajax({
        type: 'get',
        async: false,
        url: basePath + '/index/getInitUrl.htm',
        // url:'http://test.juhuizhitou.com/index/getInitUrl.htm',
        success: function (res) {
            var res = JSON.parse(res)
            APIUrl = res.data.url
            // alert(basePath+","+res+","+APIUrl)
        }
    })
    return APIUrl
}


/**
 * @Title 通用加载cordova
 * @Description
 * @author A8885 
 * @date  2017/06/12 
 */

function getCordova() {
    var version = "20170815";
    var pathLs = "../../static/";
    if (navigator.userAgent.match(/(iPhone|iPod|iPad);?/i)) {
        loadRS.loadJs(["js/cordova/ios/cordova.js"], version, pathLs);
    }
    if (navigator.userAgent.match(/android/i)) {
        loadRS.loadJs(["js/cordova/android/cordova.js"], version, pathLs);
    }

}

/**
 * @Title 调用接口
 * @Description
 * @author yuss
 * @date  2018/8/19
 */
function callAction(action, map, successCB) {
    console.table({
        action: action,
        map: map,
        successCB: successCB,
    });

    var action = action;
    var map = map;
    var successCB = successCB;
    if (navigator.userAgent.match(/(iPhone|iPod|iPad);?/i)) {
        map = map === undefined ? null : map
        // 处理交互  方法名要和ios内定义的对应
        setupWebViewJavascriptBridge(function (bridge) {
            // 处理 js 调用 oc
            try {
                bridge.callHandler(action, map, function (response) {
                    if (successCB && (typeof successCB === 'function')) {
                        successCB(response)
                    }
                })
            } catch (error) {
                console.error(error);
                if (error.toString() === "TypeError: Cannot read property '" + action + "' of undefined") {
                    // alert(action + "未定义或未添加document.addEventListener方法！")
                    console.error(action + "未定义或未添加document.addEventListener方法！");
                }
                if (error.toString() === "TypeError: navigator.JHZTApi[action] is not a function") {
                    // alert(action + "该action未定义!")
                    console.error(action + "该action未定义!");
                }
            }
        })
    }
    if (navigator.userAgent.match(/android/i)) {
        map = map === undefined ? '' : map
        if (successCB && (typeof successCB === 'function')) {
            try {
                navigator.JHZTApi[action](successCB, map)
            } catch (error) {
                console.error(error);
                if (error.toString() === "TypeError: Cannot read property '" + action + "' of undefined") {
                    // alert(action + "未定义或未添加document.addEventListener方法！")
                    console.error(action + "未定义或未添加document.addEventListener方法！");
                }
                if (error.toString() === "TypeError: navigator.JHZTApi[action] is not a function") {
                    // alert(action + "该action未定义!")
                    console.error(action + "该action未定义!");
                }
            }
        }
    }
}


/**
 * Created by Administrator on 2017/7/3 0003.
 */

// 配置项
var CONFIG = {
    wait: 60 // 倒计时时间
};
/**
 * @param o 传入对象，就是点击的获取验证码按钮
 */
function countDown(o) {
    // o为按钮
    var _this = $(o);
    if (CONFIG.wait === 0) {
        // 移除样式，可以点击
        _this.css({
            "color": "#C59C56"
        })
        _this.removeClass('btn-disabled').removeClass("text-deafult").addClass("text-warning");
        _this.text("获取验证码").removeClass("text-deafult").addClass("text-warning");
        CONFIG.wait = 60;
    } else {
        // 添加样式 并且禁止点击 css控制
        _this.css({
            "color": "#999"
        })
        _this.addClass('btn-disabled').addClass("text-deafult").removeClass("text-warning");
        _this.text(CONFIG.wait + "秒").addClass("text-deafult").removeClass("text-warning");
        CONFIG.wait--;

        setTimeout(function () {
            countDown(o);
        }, 1000)
    }
}
/**
 * @Title 动态加载js，css资源组件
 * @Description
 * @author A8885 
 * @date  2017/06/12 
 */
var loadRS = {
    /**
     * 抛出一个异常错误信息
     * @param {String} msg
     */
    throwError: function throwError(msg) {
            throw new Error(msg);
            return;
        }

        /**
         * @Title: loadCSS
         * @Description: css加载器
         * @param path
         * @return 无
         * @remark 在页面单独加载css时，要写在下一个script标签里面
         */
        ,
    loadCss: function loadCss(path, version, pathLs) {
        /*if(!this.isExitsVariable(path) || !this.isExitsVariable(version)){
            this.throwError("参数不正确");
            return false;
        }*/
        if (typeof path == "string") path = [path];
        for (var i = 0; i < path.length; i++) {
            var item = path[i];
            if (item.indexOf("?") == -1) {
                item = pathLs + item + "?v=" + version;
            }
            document.write('<link  rel="stylesheet"  type="text/css" charset="utf-8" href="' + item + '" />');
            //window.console && window.console.log(item+"加载成功");
            /*var css = document.createElement("link");  css.type = "text/css";  css.rel ="stylesheet";  css.href = item;
             document.getElementsByTagName("head")[0].insertBefore(css,document.getElementsByTagName("title")[0].previousSibling);*/
        }
        return;
    },
    loadJs: function loadJs(path, version, pathLs) {
        /*if(!this.isExitsVariable(path) || !this.isExitsVariable(version)){
            this.throwError("参数不正确");
            return false;
        }*/
        if (typeof path == "string") path = [path];
        for (var i = 0; i < path.length; i++) {
            var item = path[i];
            if (item.indexOf("?") == -1) {
                item = pathLs + item + "?v=" + version;
            }
            document.write('<script type="text/javascript" charset="utf-8" src="' + item + '"><\/script>');
            //window.console && window.console.log(item+"加载成功");
            /*var script = document.createElement("script"); script.type = "text/javascript";  script.src =   item;
             document.getElementsByTagName("head")[0].insertBefore(script,document.getElementsByTagName("title")[0].previousSibling);*/
        }
        return;
    },
    isExitsVariable: function isExitsVariable(vars) {
        try {
            if (typeof variableName == "undefined") {
                //alert("value is undefined");
                return false;
            } else {
                //alert("value is true");
                return true;
            }
        } catch (e) {}
        return false;
    }
};



/*
    return:void
    添加cookie
*/
function addcookie(name, value, expireHours) {
    var cookieString = name + "=" + escape(value) + "; path=/";
    //判断是否设置过期时间  
    if (expireHours > 0) {
        var date = new Date();
        date.setTime(date.getTime + expireHours * 3600 * 1000);
        cookieString = cookieString + "; expire=" + date.toGMTString();
    }
    document.cookie = cookieString;
}


/*
    return:boolean
    判断是否微信端
*/
function checkWxUA() {
    var ua = navigator.userAgent.toLowerCase();
    var isWeixin = ua.indexOf('micromessenger') != -1;
    var isAndroid = ua.indexOf('android') != -1;
    var isIos = (ua.indexOf('iphone') != -1) || (ua.indexOf('ipad') != -1);
    return isWeixin;
}


/*
    return:void
    加载错误页面
*/
function loadTips() {
    document.head.innerHTML = '<title>抱歉，出错了</title><meta charset="utf-8"><meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=0"><link rel="stylesheet" type="text/css" href="https://res.wx.qq.com/open/libs/weui/0.4.1/weui.css">';
    document.body.innerHTML = '<div class="weui_msg"><div class="weui_icon_area"><i class="weui_icon_info weui_icon_msg"></i></div><div class="weui_text_area"><h4 class="weui_msg_title">请在微信客户端打开链接</h4></div></div>';
}



/*
    return:string
    获取cookie
*/
function getcookie(name) {
    var strcookie = document.cookie;
    var arrcookie = strcookie.split("; ");
    for (var i = 0; i < arrcookie.length; i++) {
        var arr = arrcookie[i].split("=");
        if (arr[0] == name) return decodeURIComponent(arr[1]); //增加对特殊字符的解析  
    }
    return "";
}

/*
    return:void
    删除cookie
*/
function delCookie(name) {
    //删除cookie  
    var exp = new Date();
    exp.setTime(exp.getTime() - 1);
    var cval = getcookie(name);
    if (cval != null) document.cookie = name + "=" + cval + "; path=/;expires=" + exp.toGMTString();
}

/*
    return:string
    根据链接URL对应的参数名称获取值
*/
function GetQueryString(name) {
    var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)");
    var r = window.location.search.substr(1).match(reg);
    if (r != null) return unescape(r[2]);
    return null;
}

/*
 return:void
 根据mui生成picker通用选择器，需依赖mui相关css，js组件。

 domNamename:字符串-dom名称
 pickData 数组-下拉数据
 domType：字符串- dom类型

使用方法:
 var data = {domName: '#cityText',pickData: [{value: 1,text: '深圳市'}],domType: 'span'}
 pickInit(data);
* */

//重构pick选择器
function pickInit(data, fn) {
    var _data = {
        domName: data.domName || '.pick-dom',
        pickData: data.pickData || [{
            value: 0,
            text: '请初始化数据'
        }],
        domType: data.domType || 'input'
    }
    //--------------通用选择器-------------
    var allSelectPick = new mui.PopPicker();
    allSelectPick.setData(_data.pickData);
    jQuery(_data.domName).each(function (i) {
        //alert(jQuery(this).attr("picker_data"));
        var SelectPickThis = jQuery(this)[0]; //0 Dom对象，jQuery对象
        // alert(SelectPickThis.attr("picker_data"));
        SelectPickThis.addEventListener('tap', function (event) {
            allSelectPick.show(function (data) {
                var allSelectPick_t = data[0].text || "";
                var allSelectPick_v = data[0].value;

                if (_data.domType === "input") {
                    SelectPickThis.value = allSelectPick_t;
                    jQuery(SelectPickThis).attr("pick-value", allSelectPick_v);
                } else if (_data.domType === "div" || _data.domType === "span") {
                    jQuery(SelectPickThis).text(allSelectPick_t);
                    jQuery(SelectPickThis).attr("pick-value", allSelectPick_v);
                }
                fn(data[0]);
            });
        }, false)
    })
}


/*
    return:void
    加载网络错误
*/
function loadNetError() {
    jQuery("#mui-ui-wrap").empty();
    jQuery("#mui-ui-wrap").css({
        "text-align": "center",
        "padding": "0  20px"
    })
    var str = "<div class=\"mui-card-content\" id=\"mui-neterror-wrap\" style=\"padding:10px 0\">";
    str += (" <div class=\"mui-error-div\ style=\"padding: 0 3em;\"><a style=\"margin: 3px;width: 6em;height: 6em;display: inline-block;text-align: center;background-color: #fff;border-radius: 6em;background-clip: padding-box;border: none;color: #999;\" class=\"active\" style=\"\"> ");
    str += ("<span class=\"mui-icon mui-icon-help\" style=\"font-size: 6em;\"></span></a> ");
    str += ("<h4 class=\"mui-error-div-tit\" style=\"color: #666; margin: 0.5em 0;\">出错了</h4><h5>服务器开了一个小差，请重新尝试！</h5></div></div>")
    jQuery("#mui-ui-wrap").append(str);
}

/**
 * @Title 判断客户端
 * @Description
 * @author A8885 
 * @date  2017/06/12
 */
function getUA() {
    /*判断客户端*/
    var brower = {
        versions: function versions() {
            var u = window.navigator.userAgent;
            var num;
            if (u.indexOf('Trident') > -1) {
                //IE
                return "IE";
            } else if (u.indexOf('Presto') > -1) {
                //opera
                return "Opera";
            } else if (u.indexOf('Gecko') > -1 && u.indexOf('KHTML') == -1) {
                //firefox
                return "Firefox";
            } else if (u.indexOf('AppleWebKit' && u.indexOf('Safari') > -1) > -1) {
                //苹果、谷歌内核
                if (u.indexOf('Chrome') > -1) {
                    //chrome
                    return "Chrome";
                } else if (u.indexOf('OPR')) {
                    //webkit Opera
                    return "Opera_webkit";
                } else {
                    //Safari
                    return "Safari";
                }
            } else if (u.indexOf('Mobile') > -1) {
                //移动端
                if (!!u.match(/\(i[^;]+;( U;)? CPU.+Mac OS X/)) {
                    //ios
                    if (u.indexOf('iPhone') > -1) {
                        //iphone
                        return "iPhone";
                    } else if (u.indexOf('iPod') > -1) {
                        //ipod
                        return "iPod";
                    } else if (u.indexOf('iPad') > -1) {
                        //ipad
                        return "iPad";
                    }
                } else if (u.indexOf('Android') > -1 || u.indexOf('Linux') > -1) {
                    //android
                    num = u.substr(u.indexOf('Android') + 8, 3);
                    //return {"type":"Android", "version": num};
                    return "Android";
                } else if (u.indexOf('BB10') > -1) {
                    //黑莓bb10系统
                    return "BB10";
                } else if (u.indexOf('IEMobile')) {
                    /*windows phone*/
                    return "Windows Phone";
                }
            }
        }
    };
    var UA = brower.versions();
    return UA;
}


//传入dom名称，检测是否为空
function checkNull(DomName) {
    var f = true;
    jQuery(DomName).each(function (index, dom) {
        if (!(jQuery(dom).val().length != 0)) {
            mui.toast(jQuery(dom).attr("placeholder"));
            f = false;
            return false;
        }
    })
    return f;
}


/**
 * 格式化电话号码 155 5817 9971
 * param {telObj) input输入框对象
 */
function formatMobile(telObj) {
    var val = telObj.value.replace(/\-/g, ''),
        len = val.length;
    if (val.length < 4 || val.length == 12) return;
    if (len < 8) {
        val = val.substr(0, 3) + " " + val.substr(3);
    } else val = val.substr(0, 3) + " " + val.substr(3, 4) + " " + val.substr(7);
    telObj.value = val;
}

/**
 * 格式化单位电话号码 座机 020(0755)-1234567(12345678)
 * param {telObj) input输入框对象
 */
function formatOfficeTel(telObj) {
    //var val = telObj.value.replace(/\0/g, ''), len = val.length;
    //if (val.length < 4 || val.length == 12) return;
    var val = telObj.value;
    var len = val.length;
    var val3 = val.substr(0, 3);
    //console.log(val.substr(3, 8));
    //if (val.length < 4 || val.length == 12) return;
    if (val.length < 5 || val.length == 13) return;
    if (val3 == '010' || val3 == '020' || val3 == '021' || val3 == '022' || val3 == '023' || val3 == '024' || val3 == '025' || val3 == '027' || val3 == '028' || val3 == '029') {
        //alert(val3);
        val = val.substr(0, 3) + "-" + val.substr(3, 8);
    } else {
        val = val.substr(0, 4) + "-" + val.substr(4, 8);
    }

    /*if (len < 8) {
     val = val.substr(0, 3) + " " + val.substr(3);
     } else
     val = val.substr(0, 3) + " " + val.substr(3, 4) + " " + val.substr(7);*/
    telObj.value = val;
}

function forMatterEmoji(Obj) {
    var str = Obj.value;
    var len = str.length;
    //str = utf16toEntities(str);
    //str = toRegRule(str);
    str = str.replace(/[^a-zA-Z0-9_#-——\u4e00-\u9fa5\（\）]+$/g, '');
    Obj.value = str;
}


function forMatterEmoji_back(Obj) {
    var str = Obj.value;
    var len = str.length;
    //str = utf16toEntities(str);
    //str = toRegRule(str);
    str = str.replace(/[^a-zA-Z0-9_#-——\u4e00-\u9fa5]+$/g, '');
    Obj.value = str;
}


function toRegRule(str) {
    var patt2 = /^[a-zA-Z0-9_#-——\u4e00-\u9fa5]+$/g;
    if (!patt2.test(str)) {
        mui.toast("不支持表情输入!");
        str = "";
        return str;
    } else {
        return str;
    }
    return str;
}

//检测utf16字符正则 
function utf16toEntities(str) {
    var result = false;
    var patt = /[\ud800-\udbff][\udc00-\udfff]/g; // 检测utf16字符正则 
    str = str.replace(patt, function (char) {
        result = true;
        var H, L, code;
        if (char.length === 2) {
            H = char.charCodeAt(0); // 取出高位
            L = char.charCodeAt(1); // 取出低位 
            code = (H - 0xD800) * 0x400 + 0x10000 + L - 0xDC00; // 转换算法 
            return "&#" + code + ";";
        } else {
            return char;
        }
    });
    return result;
};

//该方法只能判断是否输入emoji表情，不能执行replace或提取具体表情符号
//JS判断是否输入emoji表情
function isEmojiCharacter(substring) {
    for (var i = 0; i < substring.length; i++) {
        var hs = substring.charCodeAt(i);
        if (0xd800 <= hs && hs <= 0xdbff) {
            if (substring.length > 1) {
                var ls = substring.charCodeAt(i + 1);
                var uc = (hs - 0xd800) * 0x400 + (ls - 0xdc00) + 0x10000;
                if (0x1d000 <= uc && uc <= 0x1f77f) {
                    return true;
                }
            }
        } else if (substring.length > 1) {
            var ls = substring.charCodeAt(i + 1);
            if (ls == 0x20e3) {
                return true;
            }
        } else {
            if (0x2100 <= hs && hs <= 0x27ff) {
                return true;
            } else if (0x2B05 <= hs && hs <= 0x2b07) {
                return true;
            } else if (0x2934 <= hs && hs <= 0x2935) {
                return true;
            } else if (0x3297 <= hs && hs <= 0x3299) {
                return true;
            } else if (hs == 0xa9 || hs == 0xae || hs == 0x303d || hs == 0x3030 || hs == 0x2b55 || hs == 0x2b1c || hs == 0x2b1b || hs == 0x2b50) {
                return true;
            }
        }
    }
}



/*时间比较,开始工作时间*/
function compareTime(n, o) {
    /*n = nDom.val();
     o = oDom.val();*/
    if (n == '' || o == '') {
        return true;
    }
    /*var nowDate = new Date().Format("yyyy-MM-dd");
     n= n == "" ? nowDate: n;
     o= o == "" ? nowDate : o;*/
    if (n != '' && n != null && n != ' ') {
        var nms = new Date(n).getTime();
    }
    if (o != '' && o != null && o != ' ') {
        var oms = new Date(o).getTime();
    }
    var f = nms <= oms;
    return f === undefined ? true : f;
}

/*时间比较，现工作时间*/
function compareTimeI(n, o) {
    /*n = nDom.val();
     o = oDom.val();*/
    if (n == '' || o == '') {
        return true;
    }
    /*var nowDate = new Date().Format("yyyy-MM-dd");
     n= n == "" ? nowDate: n;
     o= o == "" ? nowDate : o;*/
    if (n != '' && n != null && n != ' ') {
        var nms = new Date(n).getTime();
    }
    if (o != '' && o != null && o != ' ') {
        var oms = new Date(o).getTime();
    }
    var f = nms >= oms;
    return f === undefined ? true : f;
}

//时间格式化插件
Date.prototype.Format = function (fmt) {
    var o = {
        "M+": this.getMonth() + 1,
        "d+": this.getDate(),
        "h+": this.getHours(),
        "m+": this.getMinutes(),
        "s+": this.getSeconds(),
        "q+": Math.floor((this.getMonth() + 3) / 3),
        "S": this.getMilliseconds()
    };
    if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));
    for (var k in o) {
        if (new RegExp("(" + k + ")").test(fmt)) fmt = fmt.replace(RegExp.$1, RegExp.$1.length == 1 ? o[k] : ("00" + o[k]).substr(("" + o[k]).length));
    }
    return fmt;
};



//------------------校验座机格式---------
function checkPhone(str) {
    // var reg = /^0\d{2,3}-\d{7,8}(-\d{1,6})?$/; //座机 020(0755)-1234567(12345678)
    var reg = /^(\d{3,4}-)\d{7,8}$/;
    return reg.test(str);
}



//------------------校验手机格式---------
function checkMobile(str) {
    var reg = /^0?1[3|4|5|7|8][0-9]\d{8}$/;
    return reg.test(str);
}


/**
 * 将数值四舍五入(保留2位小数)后格式化成金额形式
 *
 * @param num
 *            数值(Number或者String)
 * @return 金额格式的字符串,如'1,234,567.45'
 * @type String
 */
function formatCurrency(num) {
    if (!num) {
        return "0.00";
    }
    if (Number(num) === 0) {
        return "0.00"
    }
    num = num.toString().replace(/\$|\,/g, '');
    if (isNaN(num)) num = "0";
    var sign = num == (num = Math.abs(num));
    num = Math.floor(num * 100 + 0.50000000001);
    var cents = num % 100;
    num = Math.floor(num / 100).toString();
    if (cents < 10) cents = "0" + cents;
    for (var i = 0; i < Math.floor((num.length - (1 + i)) / 3); i++) {
        num = num.substring(0, num.length - (4 * i + 3)) + ',' + num.substring(num.length - (4 * i + 3));
    }
    return (sign ? '' : '-') + num + '.' + cents;
}

//去掉字符串中所有空格(包括中间空格,需要设置第2个参数为:g)
function trim(str, is_global) {
    var result;
    if (str === undefined) {
        return;
    } //如果没有返回电话号码返回
    result = str.replace(/(^\s+)|(\s+$)/g, "");
    if (is_global && is_global.toLowerCase() == "g") {
        result = result.replace(/\s/g, "");
    }
    console.log(result);
    return result;
}

// 判断是否是手机号码格式
function isPhone(str) {
    var reg = /^1(3|4|5|7|8)\d{9}$/;
    return reg.test(trim(str, 'g'));
}

// 手机号码格式转化为 344 格式 （188 3886 9199）
function phoneSeparated(phoneNumber) {
    var tel = trim(phoneNumber, 'g');
    if (isPhone(tel)) {
        tel = tel.substring(0, 3) + ' ' + tel.substring(3, 7) + ' ' + tel.substring(7, 11);
    }
    return tel;
}

//判断邮箱
function isEmail(str) {
    //var reg = /^[A-Za-zd]+([-_.][A-Za-zd]+)*@([A-Za-zd]+[-.])+[A-Za-zd]{2,5}$/;
    var reg = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(.[a-zA-Z0-9_-])+/;
    return reg.test(str);
}


//加载loading
function loaddingimg() {
    var opts = {
        lines: 13, // The number of lines to draw
        length: 5, // The length of each line
        width: 2, // The line thickness
        radius: 10, // The radius of the inner circle
        corners: 1, // Corner roundness (0..1)
        rotate: 0, // The rotation offset
        color: '#FFF', // #rgb or #rrggbb
        speed: 1, // Rounds per second
        trail: 60, // Afterglow percentage
        shadow: false, // Whether to render a shadow
        hwaccel: false, // Whether to use hardware acceleration
        className: 'spinner', // The CSS class to assign to the spinner
        zIndex: 2e9, // The z-index (defaults to 2000000000)
        top: 'auto', // Top position relative to parent in px
        left: 'auto' // Left position relative to parent in px
    };
    var target = document.createElement("div");
    document.body.appendChild(target);
    var spinner = new Spinner(opts).spin(target);
    var overlay = iosOverlay({
        text: "加载中",
        spinner: spinner
    });
    return overlay;
}

// var RqAndroid = {
//     rQjsCallBack: function() {}
// }

function setupWebViewJavascriptBridge(callback) {

    /*IOS申明交互 */
    if (window.WebViewJavascriptBridge) {
        return callback(WebViewJavascriptBridge);
    }
    if (window.WVJBCallbacks) {
        return window.WVJBCallbacks.push(callback);
    }
    window.WVJBCallbacks = [callback];
    var WVJBIframe = document.createElement('iframe');
    WVJBIframe.style.display = 'none';
    WVJBIframe.src = 'https://__bridge_loaded__';
    document.documentElement.appendChild(WVJBIframe);
    setTimeout(function () {
        document.documentElement.removeChild(WVJBIframe)
    }, 0)
}

//根据名称获取Cookie
function getCookie(c_name) {
    if (document.cookie.length > 0) {
        var c_start = document.cookie.indexOf(c_name + "=");
        if (c_start != -1) {
            c_start = c_start + c_name.length + 1;
            var c_end = document.cookie.indexOf(";", c_start);
            if (c_end == -1) c_end = document.cookie.length;
            return unescape(document.cookie.substring(c_start, c_end));
        }
    }
    return "";
}

//根据名称设置Cookie
function setCookie(c_name, value, expiredays) {
    var exdate = new Date();
    exdate.setDate(exdate.getDate() + expiredays);
    document.cookie = c_name + "=" + escape(value) + (expiredays == null ? "" : ";expires=" + exdate.toGMTString());
}

// 清除cookie
function clearCookie(name) {
    setCookie(name, "", -1);
}